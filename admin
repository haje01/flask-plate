#!/usr/bin/env python
# PYTHON_ARGCOMPLETE_OK

import argh
from argh import arg
from myapp.util import redis, confirm, remove_account_by_nid,\
    remove_account_by_id, reset_secret_key

class ChoicesCompleter(object):
    def __init__(self, choices=[]):
        self.choices = choices
    def __call__(self, prefix, **kwargs):
        return (c for c in self.choices if c.startswith(prefix))

def flushdb():
    "Flush DB!"
    if confirm('All data will be deleted. Are you sure?', resp=False):
        redis.flushdb()
        print "Your DB has been flushed."

def get_allaccounts():
    ids = []
    account_cnt = redis.get('account_cnt')
    if account_cnt:
        account_cnt = int(account_cnt)
        for nid in range(1, account_cnt + 1):
            rd_account_id = 'account:%s:id' % nid
            _id = redis.get(rd_account_id)
            if _id:
                ids.append(_id)
    return ids

def allaccounts():
    "Show all accounts"
    for a in get_allaccounts():
        print a

def id_completer(prefix, **kwargs):
    accounts = get_allaccounts()
    if len(prefix) > 0:
        return [a for a in accounts if a.startswith(prefix)]
    return accounts

@arg('-i', '--id', help='delete account by ID', completer=id_completer)
@arg('-n', '--nid', type=int, help='delete account by nid')
def delaccount(id, nid):
    "Delete a account"
    if not id or nid:
        print 'please specify ID or nid'
        return
    if id:
        remove_account_by_id(id)
    elif nid:
        remove_account_by_nid(nid)

def resetkey():
    "Reset session secret key"
    reset_secret_key()

if __name__ == '__main__':
    argh.dispatch_commands([flushdb, allaccounts, delaccount, resetkey])

